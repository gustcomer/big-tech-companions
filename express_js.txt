start a npm project
  > npm init -y

install express
  > npm install express

import the express library
  const express = require("express");

build an express object
  const app = express();

configure a get route on express
  app.get("/", (req, res) => {
    res.send("<h2>Hi there!</h2>");
  });

check if there is any PORT on environment variables, else set it to 3000
  const port = process.env.PORT || 3000;

start listening on a port
  app.listen(port, () => console.log(`listening on port ${port}`));

create a router
  const router = express.Router();

  router
    .route("/")
    .get(postController.getAllPosts)
    .post(postController.createPost);

  router
    .route("/:id")
    .get(postController.getOnePost)
    .patch(postController.updatePost)
    .delete(postController.deletePost);
  
  ...

  const postRouter = require("./routes/postRoutes")

Apply a router that gets some route and apply more specific routing in that route
the Router is treated as a middleware
  app.use("/api/v1/posts", postRouter)

get the middleware parser function and apply it as a middleware
  app.use(express.json());
  
================================================================================
Glossary

app: an Express Application
  app.use(): pass a middleware function to it and it will be mounted.
express: namespace
  express.json(): middleware function that parses the req and can be passed to the use()
express(): creates an express application
  - it is a function that returns a core.Express