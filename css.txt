CSS Simple Selectors

  Element Selectors
    p {...} - selects all p elements
  
  Id Selectors
    #para1 {...} - applies the rules to all id="para1"
  
  Class Selectors
    .center {} - applies to all elements with class="center"

Combinator Selectors

  element+class selectors
    p.center {} - only <p> elements with class="center"

  Universal Selectors
    * {} - all HTML elements on the page
  
  Grouping Selectors
    h1, h2, p {...}

Pseudo-class Selectors
  selector:pseudo-class { ... }
  pseudo-classes represent special state of an element
  
  :link - unvisited
  :visited - visited
  :hover - mouse over
  :active - selected
  :first-child
  :lang - specific languages
  ...

Pseudo-elements
  specify parts of an element

  ::after	p::after	Insert something after the content of each <p> element
  ::before	p::before	Insert something before the content of each <p> element
  ::first-letter	p::first-letter	Selects the first letter of each <p> element
  ::first-line	p::first-line	Selects the first line of each <p> element
  ::marker	::marker	Selects the markers of list items
  ::selection	p::selection	Selects the portion of an element that is selected by a user

Attribute Selectors
  have specific attributes or attribute values

  CSS [attribute] Selector
    a[target] { ... }
  
  CSS [attribute="value"] Selector - specified attribute and value
    a[target="_blank"] { ... }
  
  CSS [attribute~="value"] Selector - elements with an attribute value containing a specified word
    [title~="flower"] { ... }
  
  CSS [attribute|="value"] Selector - elements with the specified attribute or followed by a hyphen
    [class|="top"] { ... }
  
  CSS [attribute^="value"] Selector - select elements starting with the specified attribute value
    [class^="top"] { ... }

  CSS [attribute$="value"] Selector - attribute value ends with a specified value
    [class$="test"] { ... }
  
  CSS [attribute*="value"] Selector - attribute value contains a specified value.
    [class*="te"] { ... }
  
  

resources
  https://www.w3schools.com/css/
  https://css-tricks.com/
  https://maujor.com/
  https://whatunit.com/
  https://css-tricks.com/snippets/css/a-guide-to-flexbox/
  https://github.com/bradtraversy/50projects50days

================================================================================
Glossary

Absolute Length Units: px, pt, pc, in, mm, cm.
@apply: it's a way of using tailwind utility classes inside .css files to create a class from these utility classes.
  - eg: .cartao { @apply w-60 rounded-md p-2 shadow grid gap-y-2 bg-yellow-400 }
box model: describes how every web element is modeled.
  - composed of Content Area, Padding, Border, Margin.
cap: height of the capital letter.
clamp()
  - useful for font-size responsiveness
CSS Houdini: set of APIs that expose parts of the CSS renderind mechanism.
  - allows access to the CSS Object Model (CSSOM).
custom property: allow for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not.
  - it's like CSS variables on steroids.
  - @property CSS at-rule is part of the CSS Houdini umbrella of APIs.
dpi: dots per inch
em: unit relative to the font-size of the parent element.
  - (2em means 2 times the size of the current font)
  - usually it is relative to the parent font size, so in a document 1em could mean diferent things
  - related: rem.
  - usefull when we need the font size to be relative to the font-size of the parent element
ex: height of the letter x
fr: fractional unit used in grids. 1fr represents 1 part of the available space.
  - only use it when you want the grid to be fluid, like a calendar, etc.
  - better than percentages because they don't take into account the gap.
gap: property that allows to adjust spacing between elements in grid layout
lh: line height.
@media: check media queries
  media types: all, print, screen. -- if nothing is defined, all is assumed.
  media features: device-width, prefers-color-scheme, prefers-reduced-motion
media queries: allow you to apply CSS styles depending on a device's media type or other characteristics.
min-width:
  - useful in flex context where thinks should grow and shrink, but keeping a minimum and maximum
  - related: max-width
outline: it looks like a border, but it's placed outside the border and doesn't take space.
  - border's are part of the box model while outlines aren't.
  - use cases: focus
@property: check custom property.
  - @property at-rule
px: 1px = 1/96th of 1in.
  - for low-dpi devices it will be one device pixel (and hence relative length unit)
  - You can calculate the size of a pixel for any display device dividing the size of the display screen by the resolution. 
  - for small details such as borders, shadows, etc, you can use pixels.
Relative Length Units: em, ex, ch, vw, rem, vh, vmin, vmax, %
rem: unit relative to the font-size of the root element element.
svh: small vieport height
  related: dvh: dynamic vieport height; lvh: large viewport height.
text-overflow: property to cut overflowing text
  - text-overflow: clip, ellipsis
vh: relative to the viewport's height. 1vh is equal to 1% of the viewport's height.
vw: relative to the viewport's width. 1vw is equal to 1% of the viewport's width.